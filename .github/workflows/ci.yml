name: CI

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  RUST_VERSION: 1.66.0
  FORC_VERSION: 0.32.2
  CORE_VERSION: 0.15.1
  PATH_TO_SCRIPTS: .github/scripts

jobs:
  lint-toml-files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
      - name: Install Cargo.toml linter
        uses: baptiste0928/cargo-install@v1
        with:
          crate: cargo-toml-lint
          version: '0.1'
      - name: Run Cargo.toml linter
        run: git ls-files | grep Cargo.toml$ | xargs --verbose -n 1 cargo-toml-lint

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        project: ["airdrop", "AMM", "auctions", "DAO", "escrow", "fractional-NFT", "fundraiser", "multisig-wallet", "name-registry", "NFT", "oracle", "OTC-swap-predicate", ".template"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
          override: true

      - name: Init cache
        uses: Swatinem/rust-cache@v1

      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: Install Fuel toolchain
        uses: FuelLabs/action-fuel-toolchain@v0.2.0
        with:
          name: my-toolchain
          components: forc@${{ env.FORC_VERSION }}, fuel-core@${{ env.CORE_VERSION }}

      - name: Check Sway formatting
        run: forc fmt --path ${{ matrix.project }} --check

      - name: Check Rust formatting
        run: |
          cd ${{ matrix.project }}
          cargo fmt --verbose --check

      - name: Build Sway
        run: forc build --path ${{ matrix.project }}

      - name: Run Rust tests
        run: |
          cd ${{ matrix.project }}
          cargo test

  contributing-book:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        project: [".docs/contributing-book/src/code"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
          override: true

      - name: Init cache
        uses: Swatinem/rust-cache@v1

      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: Install Fuel toolchain
        uses: FuelLabs/action-fuel-toolchain@v0.2.0
        with:
          name: my-toolchain
          components: forc@${{ env.FORC_VERSION }}, fuel-core@${{ env.CORE_VERSION }}

      - name: Check Sway formatting
        run: forc fmt --path ${{ matrix.project }} --check

      - name: Build Sway
        run: forc build --path ${{ matrix.project }}
