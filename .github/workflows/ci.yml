name: CI

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  RUST_VERSION: 1.63.0
  FORC_VERIONS: 0.24.1
  CORE_VERSION: 0.10.1
  PATH_TO_SCRIPTS: .github/scripts
  BOOK_SOURCE_CODE: .docs/contributing-book/src/code

jobs:
  lint-toml-files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
      - name: Install Cargo.toml linter
        uses: baptiste0928/cargo-install@v1
        with:
          crate: cargo-toml-lint
          version: '0.1'
      - name: Run Cargo.toml linter
        run: git ls-files | grep Cargo.toml$ | xargs --verbose -n 1 cargo-toml-lint

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        project: ["dao-voting", "escrow", "fundraiser", "multisig-wallet", "NFT", "oracle"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
          override: true

      - name: Init cache
        uses: Swatinem/rust-cache@v1

      - name: Install a modern linker (mold)
        uses: rui314/setup-mold@v1

      - name: Force Rust to use mold globally for compilation
        run: |
          touch ~/.cargo/config.toml
          echo "[target.x86_64-unknown-linux-gnu]" > ~/.cargo/config.toml
          echo 'linker = "clang"' >> ~/.cargo/config.toml
          echo 'rustflags = ["-C", "link-arg=-fuse-ld=/usr/local/bin/mold"]' >> ~/.cargo/config.toml

      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: Install Fuel toolchain
        uses: FuelLabs/action-fuel-toolchain@v0.2.0
        with:
          name: my-toolchain
          components: forc@${{ env.FORC_VERIONS }}, fuel-core@${{ env.CORE_VERIONS }}

      - name: Check Sway formatting
        run: forc fmt --path ${{ matrix.project }} --check

      - name: Check Rust formatting
        run: |
          cd ${{ matrix.project }}
          cargo fmt --verbose --check

      - name: Build Sway
        run: sh ${{ env.PATH_TO_SCRIPTS }}/build.sh ${{ matrix.project }}

      - name: Run Forc tests
        run: |
          cd ${{ matrix.project }}
          forc test

  contributing-book:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        project: ["${{ env.BOOK_SOURCE_CODE }}/bad_documentation", "${{ env.BOOK_SOURCE_CODE }}/connect-four"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
          override: true

      - name: Init cache
        uses: Swatinem/rust-cache@v1

      - name: Install a modern linker (mold)
        uses: rui314/setup-mold@v1

      - name: Force Rust to use mold globally for compilation
        run: |
          touch ~/.cargo/config.toml
          echo "[target.x86_64-unknown-linux-gnu]" > ~/.cargo/config.toml
          echo 'linker = "clang"' >> ~/.cargo/config.toml
          echo 'rustflags = ["-C", "link-arg=-fuse-ld=/usr/local/bin/mold"]' >> ~/.cargo/config.toml

      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: Install Fuel toolchain
        uses: FuelLabs/action-fuel-toolchain@v0.2.0
        with:
          name: my-toolchain
          components: forc@${{ env.FORC_VERIONS }}, fuel-core@${{ env.CORE_VERIONS }}

      - name: Check Sway formatting
        run: forc fmt --path ${{ matrix.project }} --check

      - name: Build Sway
        run: forc build --path ${{ matrix.project }} --check
