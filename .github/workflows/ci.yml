name: CI

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  RUST_VERSION: 1.61.0
  PATH_TO_SCRIPTS: .github/scripts

jobs:
  cancel-previous-runs:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  check-forc-badge-version:
    needs: cancel-previous-runs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Checking versions
        run: sh ${{ env.PATH_TO_SCRIPTS }}/forc_badge_check.sh

  lint-toml-files:
    needs: cancel-previous-runs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
      - name: Install Cargo.toml linter
        uses: baptiste0928/cargo-install@v1
        with:
          crate: cargo-toml-lint
          version: "0.1"
      - name: Run Cargo.toml linter
        run: git ls-files | grep Cargo.toml$ | xargs --verbose -n 1 cargo-toml-lint

  build:
    needs: cancel-previous-runs
    runs-on: ubuntu-latest

    strategy:
      matrix:
        project: ["escrow", "multisig-wallet"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
          override: true

      - name: Init cache
        uses: Swatinem/rust-cache@v1
      
      - name: Install a modern linker (mold)
        uses: rui314/setup-mold@v1

      - name: Force Rust to use mold globally for compilation
        run: |
                touch ~/.cargo/config.toml
                echo "[target.x86_64-unknown-linux-gnu]" > ~/.cargo/config.toml
                echo 'linker = "clang"' >> ~/.cargo/config.toml
                echo 'rustflags = ["-C", "link-arg=-fuse-ld=/usr/local/bin/mold"]' >> ~/.cargo/config.toml

      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: Install fuelup
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://fuellabs.github.io/fuelup/fuelup-init.sh | sh -s -- -y install
          echo "export PATH=\$HOME/.fuelup/bin:\$PATH" >> ~/.bashrc
          source ~/.bashrc

      - name: Check Sway formatting
        run: forc fmt --path ${{ matrix.project }} --check

      - name: Check Rust formatting
        run: |
          cd ${{ matrix.project }}
          cargo fmt --verbose --check

      - name: Build Sway
        run: sh ${{ env.PATH_TO_SCRIPTS }}/build.sh ${{ matrix.project }}

      - name: Run Forc tests
        run: |
          cd ${{ matrix.project }}
          forc test
