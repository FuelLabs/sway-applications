library data_structures;

use std::b512::B512;

pub enum MessageFormat {
    None: (),
    EIP191PersonalSign: (),
}

pub enum MessagePrefix {
    None: (),
    Ethereum: (),
}

pub enum WalletType {
    Fuel: (),
    EVM: (),
}

pub struct SignatureInfo {
    /// The type of formatting of the message that was signed.
    message_format: MessageFormat,
    /// The type of prefix prepended to the message that was signed.
    message_prefix: MessagePrefix,
    /// The signature generated by signing over a message hash with the format and prefix specified in the `format` and `prefix` fields.
    signature: B512,
    /// The wallet type of the signer of the message.
    wallet_type: WalletType,
}

pub struct Transaction {
    /// Unique identifier for the contract which prevents this transaction from being submitted to another
    /// instance of the multisig.
    contract_identifier: ContractId,
    /// Payload sent to destination  // TODO: change to Bytes when SDK support is implemented: https://github.com/FuelLabs/fuels-rs/issues/723
    data: b256,
    /// The recipient (output / contract) regarding the transaction details.
    destination: Identity,
    /// Value used to prevent double spending.
    nonce: u64,
    /// Amount of asset.
    value: u64,
}

pub struct User {
    /// The wallet address of a user.
    address: b256,
    /// The number of approvals the user provides when approving.
    weight: u64,
}
